import { GraphQLObjectType, GraphQLResolveInfo } from 'graphql';
export interface MongoDbProjection {
    [key: string]: 1;
}
export interface ProjectionField {
    [key: string]: ProjectionField | 1;
}
export declare const getMongoDbProjection: (info: GraphQLResolveInfo, graphQLType: GraphQLObjectType, ...excludedFields: string[]) => MongoDbProjection;
export declare function getRequestedFields(info: GraphQLResolveInfo): ProjectionField;
export declare function getProjection(fieldNode: ProjectionField, graphQLType: GraphQLObjectType, ...excludedFields: string[]): MongoDbProjection;
export declare function getResolveFieldsDependencies(fieldNode: ProjectionField, graphQLType: GraphQLObjectType): string[];
export declare function mergeProjectionAndResolveDependencies(projection: MongoDbProjection, resolveDependencies: string[]): MongoDbProjection;
